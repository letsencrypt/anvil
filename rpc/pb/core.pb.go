// Code generated by protoc-gen-go.
// source: rpc/pb/core.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	rpc/pb/core.proto

It has these top-level messages:
	KeyAuthorization
	Domain
	Valid
*/
package pb

import proto "github.com/letsencrypt/boulder/Godeps/_workspace/src/github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "github.com/letsencrypt/boulder/Godeps/_workspace/src/golang.org/x/net/context"
	grpc "github.com/letsencrypt/boulder/Godeps/_workspace/src/google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type KeyAuthorization struct {
	Token      string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Thumbprint string `protobuf:"bytes,2,opt,name=thumbprint" json:"thumbprint,omitempty"`
}

func (m *KeyAuthorization) Reset()                    { *m = KeyAuthorization{} }
func (m *KeyAuthorization) String() string            { return proto.CompactTextString(m) }
func (*KeyAuthorization) ProtoMessage()               {}
func (*KeyAuthorization) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Domain struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Domain) Reset()                    { *m = Domain{} }
func (m *Domain) String() string            { return proto.CompactTextString(m) }
func (*Domain) ProtoMessage()               {}
func (*Domain) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Valid struct {
	Valid bool `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
}

func (m *Valid) Reset()                    { *m = Valid{} }
func (m *Valid) String() string            { return proto.CompactTextString(m) }
func (*Valid) ProtoMessage()               {}
func (*Valid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*KeyAuthorization)(nil), "pb.KeyAuthorization")
	proto.RegisterType((*Domain)(nil), "pb.Domain")
	proto.RegisterType((*Valid)(nil), "pb.Valid")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for DummyService service

type DummyServiceClient interface {
	Dummy(ctx context.Context, in *Domain, opts ...grpc.CallOption) (*Valid, error)
}

type dummyServiceClient struct {
	cc *grpc.ClientConn
}

func NewDummyServiceClient(cc *grpc.ClientConn) DummyServiceClient {
	return &dummyServiceClient{cc}
}

func (c *dummyServiceClient) Dummy(ctx context.Context, in *Domain, opts ...grpc.CallOption) (*Valid, error) {
	out := new(Valid)
	err := grpc.Invoke(ctx, "/pb.DummyService/Dummy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DummyService service

type DummyServiceServer interface {
	Dummy(context.Context, *Domain) (*Valid, error)
}

func RegisterDummyServiceServer(s *grpc.Server, srv DummyServiceServer) {
	s.RegisterService(&_DummyService_serviceDesc, srv)
}

func _DummyService_Dummy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Domain)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(DummyServiceServer).Dummy(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _DummyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DummyService",
	HandlerType: (*DummyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Dummy",
			Handler:    _DummyService_Dummy_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x2a, 0x48, 0xd6,
	0x2f, 0x48, 0xd2, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a,
	0x48, 0x52, 0xf2, 0xe0, 0x12, 0xf0, 0x4e, 0xad, 0x74, 0x2c, 0x2d, 0xc9, 0xc8, 0x2f, 0xca, 0xac,
	0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0x13, 0x12, 0xe1, 0x62, 0x2d, 0xc9, 0xcf, 0x4e, 0xcd, 0x93, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x84, 0xe4, 0xb8, 0xb8, 0x4a, 0x32, 0x4a, 0x73, 0x93,
	0x0a, 0x8a, 0x32, 0xf3, 0x4a, 0x24, 0x98, 0xc0, 0x52, 0x48, 0x22, 0x4a, 0x32, 0x5c, 0x6c, 0x2e,
	0xf9, 0xb9, 0x89, 0x99, 0x79, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x50, 0xed, 0x60,
	0xb6, 0x92, 0x2c, 0x17, 0x6b, 0x58, 0x62, 0x4e, 0x66, 0x0a, 0xc8, 0xf0, 0x32, 0x10, 0x03, 0x2c,
	0xcb, 0x11, 0x04, 0xe1, 0x18, 0x19, 0x70, 0xf1, 0xb8, 0x94, 0xe6, 0xe6, 0x56, 0x06, 0xa7, 0x16,
	0x95, 0x65, 0x26, 0xa7, 0x0a, 0x29, 0x70, 0xb1, 0x82, 0xf9, 0x42, 0x5c, 0x7a, 0x05, 0x49, 0x7a,
	0x10, 0x73, 0xa5, 0x38, 0x41, 0x6c, 0xb0, 0x29, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x3f, 0x18, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xc5, 0xe2, 0xad, 0xd8, 0x00, 0x00, 0x00,
}
